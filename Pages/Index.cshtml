@page
@model TaskRoute.Pages.IndexModel
@using System.Text.Json
@{
    ViewData["Title"] = "Le tue commissioni";
}

@section Styles {
    <link rel="stylesheet"
          href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <style>
        html, body {
            height: 100%;
            margin: 0;
            display: flex;
            flex-direction: column;
        }

        main {
            flex: 1;
        }

        #map {
            height: 500px;
            border-radius: 8px;
            overflow: hidden;
        }
    </style>
}

<main class="container mt-4">
    <h1 class="mb-4">Le tue commissioni</h1>
    <div id="map" class="mb-4"></div>
</main>

<footer class="text-center py-3 border-top">
    © 2025 - TaskRoute
</footer>

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // 1) inizializza mappa senza view
            var map = L.map('map');
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '&copy; OpenStreetMap'
            }).addTo(map);

            // 2) prendi i dati delle commissioni
            var tasks = @Html.Raw(
                JsonSerializer.Serialize(
                    Model.Commissions.Select(c => new {
                        lat = c.Location?.Latitude ?? 45.4642,
                        lng = c.Location?.Longitude ?? 9.19,
                        title = c.Title,
                        id = c.Id
                    })
                )
            );

            // 3) crea i marker e raccoglili in un array
            var markerList = tasks.map(function (t) {
                return L.marker([t.lat, t.lng])
                    .addTo(map)
                    .bindPopup("<strong>" + t.title + "</strong>");
            });

            // 4) se ci sono marker, adatta la vista ai loro bounds
            if (markerList.length > 0) {
                var group = L.featureGroup(markerList);
                map.fitBounds(group.getBounds().pad(0.2));
            } else {
                // fallback generico
                map.setView([45.4642, 9.19], 12);
            }

            // 5) (opzionale) disegna cerchio "Sei qui" ma NON cambia il centro
            map.locate({ setView: false, maxZoom: 12, timeout: 10000 });
            map.on('locationfound', function (e) {
                L.circle(e.latlng, {
                    radius: 50,
                    color: '#007bff',
                    fillOpacity: 0.3
                })
                .addTo(map)
                .bindPopup("Sei qui")
                .openPopup();
            });
        });
    </script>
}
